# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

require 'semantic'
require 'json'

default_platform(:ios)

PLIST_LOCATION = "../Supfam/Supporting/Expo.plist"
RELEASE_LOCATION = "../../EXPO_RELEASE.json"

def upgrade_ios_release
  releaseObject = JSON.parse(File.read(RELEASE_LOCATION))
  releaseObject["ios"] += 1
  releaseNumber = releaseObject["ios"]
  fileContents = File.read(PLIST_LOCATION)
  newContents = fileContents.gsub(/ios-v\d+/, "ios-v#{releaseNumber}")
  File.write(PLIST_LOCATION, newContents)
  File.write(RELEASE_LOCATION, releaseObject.to_json)
  system("git commit -am 'Update to release channel ios-v#{releaseNumber}'")
end

def beta(do_increment)
  # Ensure that your git status is not dirty
  ensure_git_status_clean

  # Increment the build number (not the version number)
  # Providing the xcodeproj is optional
  version = Semantic::Version.new latest_testflight_build_number
  increment_build_number(xcodeproj: "Supfam.xcodeproj", build_number: version.patch!.to_s)

  if do_increment
    increment_version_number

    # Commit the version bump
    commit_version_bump(xcodeproj: "Supfam.xcodeproj", force: true)

    upgrade_ios_release
  end

  build_app(workspace: "Supfam.xcworkspace", scheme: "Supfam", export_xcargs: "-allowProvisioningUpdates") 
  upload_to_testflight(skip_waiting_for_build_processing: true)
end

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    beta(true)
  end

  lane :beta_update do
    beta(false)
  end

  lane :expo_publish do
    ensure_git_status_clean

    Dir.chdir("../..") do
      releaseObject = JSON.parse(File.read('./EXPO_RELEASE.json'))
      releaseNumber = releaseObject['ios']

      system("expo publish --release-channel ios-v#{releaseNumber} --target bare", out: $stdout)
      system("git checkout -- android/app/src/main/AndroidManifest.xml", out: $stdout)
    end
  end
end
