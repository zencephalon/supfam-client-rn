# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

require 'semantic'
require 'json'

default_platform(:ios)

plistLocation = "../Supfam/Supporting/Expo.plist"
releaseLocation = "../../EXPO_RELEASE.json"

def upgrade_ios_release
	releaseObject = JSON.parse(File.read(releaseLocation))
	releaseObject["ios"] += 1
	releaseNumber = releaseObject["ios"]
	fileContents = File.read(plistLocation)
	newContents = fileContents.gsub(/iOS-v\d+/, "iOS-v#{releaseNumber}")
	File.write(plistLocation, newContents)
	File.write(releaseLocation, releaseObject.to_json)
end

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    # Ensure that your git status is not dirty
    ensure_git_status_clean

    # Increment the build number (not the version number)
    # Providing the xcodeproj is optional
    version = Semantic::Version.new latest_testflight_build_number
    increment_build_number(xcodeproj: "Supfam.xcodeproj", build_number: version.patch!.to_s)
    upgrade_ios_release

    # Commit the version bump
    commit_version_bump(xcodeproj: "Supfam.xcodeproj")

    # Add a git tag for this build. This will automatically
    # use an appropriate git tag name
    add_git_tag

    # Push the new commit and tag back to your git remote
    push_to_git_remote

    build_app(workspace: "Supfam.xcworkspace", scheme: "Supfam", export_xcargs: "-allowProvisioningUpdates") 
    upload_to_testflight(skip_waiting_for_build_processing: true)
  end

  lane :release_channel do
  end
end
